<script>
    const snowflakes = ["⛄", "❄", "❄", "❆", "❅", "✥"];
    // 创建雪花
    function createSnowflake() {
        const snowflake = document.createElement("span");
        snowflake.classList.add("snowflake");
        const randomIndex = Math.floor(Math.random() * snowflakes.length);
        snowflake.textContent = snowflakes[randomIndex];
        
        // 起始位置
        /* 80%概率 生成在页面两侧 30% 的位置
        const probability = Math.random();
        let startPosition = Math.random() * 100;

        if (probability < 0.8) {
            startPosition = Math.random() < 0.5 ? Math.random() * 30 : (Math.random() * 30) + 70;
        }
        snowflake.style.left = `${startPosition}vw`;
        */
        snowflake.style.left = `${Math.random() * 100}vw`;
        snowflake.style.top = `-30px`;
        // 雪花大小与透明度
        const size = Math.random() * 18 + 10;
        snowflake.style.fontSize = `${size}px`;
        const opacity = Math.random() * 0.6 + (size > 18 ? 0.4 : 0);
        snowflake.style.setProperty("--opacity", opacity);
        // 动画持续时间
        const fallDuration = Math.random() * 10 + 5;
        // 旋转持续时间
        const rotateDuration = Math.random() * 3 + 1;

        snowflake.style.animationDuration = `${fallDuration}s, ${fallDuration}s`; // 向 CSS 添加淡出动画的持续时间
        // 横向幅度
        const translateX = (Math.random() * 500 - 200);
        snowflake.style.setProperty("--translateX", `${translateX}px`);
        // 纵向幅度
        // * 0.3 只在上面 30% 部分
        snowflake.style.setProperty("--translateY", `${window.innerHeight * 0.3}px `);

        document.body.appendChild(snowflake);
        // 移除雪花
        setTimeout(() => {
            snowflake.remove();
        }, fallDuration * 1000);
    }
    
    function snowfallAnimation() {
        // 载入时若边栏是隐藏状态则不加载雪花
        const sidebarnav = document.querySelector('.sidebar');
        const sidebarnavdisplay = window.getComputedStyle(sidebarnav).getPropertyValue('display'); 
        if (sidebarnavdisplay !== 'none') {
            createSnowflake();
        }
        setTimeout(snowfallAnimation, 250); // 生成速度，毫秒
    }
    snowfallAnimation();

    document.addEventListener("DOMContentLoaded", function() {
    // Check if 'acknowledged' flag is set in localStorage
    if (localStorage.getItem('cookieAcknowledged') !== 'true') {
        // If not acknowledged, create the notification element
        var cookieNotification = document.createElement('div');
        cookieNotification.setAttribute('id', 'cookieNotification');
        cookieNotification.style.opacity = 0;
        cookieNotification.style.transition = "opacity 0.5s";
        cookieNotification.innerHTML =
            '<div style="position: fixed; bottom: 10px; right: 10px; background-color: rgba(10, 10, 10, 0.7); color: white; padding: 20px; z-index: 1000; box-shadow: 0 2px 5px rgba(0,0,0,0.2);">' +
            '<span>本网站使用 Cookies，以启用评论系统和分析功能。<br />'+
            '<a href="/cookies/" style="color: #9CD9F0;" rel="noopener noreferrer nofollow" target="_blank" >了解更多</a></span>' +
            '<button style="width: 100%; background-color: rgba(240, 85, 136, 0.75); color: white; padding: 10px; border: none; border-radius: 4px; cursor: pointer; font-weight: bold; margin-top:5px; " onclick="acknowledgeCookie()">知道了</button>' +
            '</div>';

        // Append the notification to the body
        document.body.appendChild(cookieNotification);

        // Start the fade-in effect
        setTimeout(function() {
            cookieNotification.style.opacity = 1;
        }, 10);
    }

    // Define the acknowledge function
    window.acknowledgeCookie = function() {
        // Fade out the notification
        var notificationElement = document.getElementById('cookieNotification');
        if (notificationElement) {
            notificationElement.style.opacity = 0;
            // Wait for the transition to finish before removing the element
            setTimeout(function() {
                document.body.removeChild(notificationElement);
            }, 2000);
        }
        // Set the flag in localStorage
        localStorage.setItem('cookieAcknowledged', 'true');
    }
});


</script>